#!/usr/bin/env python3
import random
import string
import argparse
import sys

def generate_password(length, use_upper, use_digits, use_special):
    char_pool = string.ascii_lowercase  # Start with lowercase letters
    
    # Include uppercase letters if needed
    if use_upper:
        char_pool += string.ascii_uppercase
    
    # Include digits if needed
    if use_digits:
        char_pool += string.digits
    
    # Include special characters if needed
    if use_special:
        char_pool += string.punctuation
    
    # Generate the password
    password = ''.join(random.choice(char_pool) for _ in range(length))
    return password

def main():
    # Parse arguments
    parser = argparse.ArgumentParser(
        description="Generate a secure random password.",
        formatter_class=argparse.ArgumentDefaultsHelpFormatter
    )
    parser.add_argument(
        'length', 
        type=int, 
        nargs='?', 
        default=12, 
        help="Length of the password"
    )
    parser.add_argument(
        '--no-special', 
        action='store_true',
        help="Exclude special characters"
    )
    parser.add_argument(
        '--no-numbers', 
        action='store_true',
        help="Exclude numbers"
    )
    
    try:
        args = parser.parse_args()
        
        # Validate password length
        if args.length < 1:
            print("Error: Password length must be at least 1 character", file=sys.stderr)
            sys.exit(1)
            
        # Default settings for a strong password
        use_upper = True
        use_digits = not args.no_numbers
        use_special = not args.no_special
        
        # Generate and display the password
        password = generate_password(args.length, use_upper, use_digits, use_special)
        print(f"{password}")
        
    except argparse.ArgumentError as e:
        print(f"Error: {str(e)}", file=sys.stderr)
        sys.exit(1)

if __name__ == "__main__":
    main()
